# handlers/menu.py

import logging
from aiogram import Router, F, types
from aiogram.types import (
    Message, CallbackQuery, InlineKeyboardButton,
    InlineKeyboardMarkup, InputMediaPhoto
)
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ —Å—Ç–µ–π—Ç–æ–≤
from constants.booking_const import (
    groups_data,
    GROUP_CHOICE_IMG,
    DAY_CHOICE_IMG,
    TIME_CHOICE_IMG,
    FINAL_BOOKED_IMG,
)
from app_states import BookUserStates

from handlers.news import cmd_show_news

menu_router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å: {chat_id: message_id}, —á—Ç–æ–±—ã —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
last_menu_message = {}

# file_id –∫–∞—Ä—Ç–∏–Ω–∫–∏ (—Ñ–æ—Ç–æ) –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:
MENU_PHOTO_ID = "AgACAgQAAyEFAASJKijTAAIZ_mgjKdj-Sa3MdMHW-pSy_qLMhJOKAAJPxzEba90JUQfUH5f_fWYoAQADAgADeQADNgQ"


@menu_router.message(Command("menu"))
async def cmd_menu(message: Message):
    chat_id = message.chat.id

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
    old_msg_id = last_menu_message.get(chat_id)
    if old_msg_id:
        try:
            await message.bot.delete_message(chat_id=chat_id, message_id=old_msg_id)
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é –≤ —á–∞—Ç–µ {chat_id}: {e}")

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: 2 –∫–æ–ª–æ–Ω–∫–∏ √ó 3 —Å—Ç—Ä–æ–∫–∏ (6 –∫–Ω–æ–ø–æ–∫)
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚è∞ Booking / È¢ÑÁ∫¶", callback_data="menu_stub|booking"),
            InlineKeyboardButton(text="üíÉ Girls / Â•≥Â≠©",  callback_data="menu_stub|girls"),
        ],
        [
            # –ó–¥–µ—Å—å —É–∂–µ callback_data="view_all_bookings"
            InlineKeyboardButton(text="üìã All Booking / ÊâÄÊúâÈ¢ÑÁ∫¶", callback_data="view_all_bookings"),
            InlineKeyboardButton(text="üßÆ Balance / ‰ΩôÈ¢ù",        callback_data="menu_stub|balance"),
        ],
        [
            InlineKeyboardButton(text="üì∞ News / Êñ∞Èóª", callback_data="menu_stub|news"),
            InlineKeyboardButton(text="‚ùå Cancel Booking / ÂèñÊ∂àÈ¢ÑÁ∫¶", callback_data="menu_stub|cancel_booking"),
        ]
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é (—Ñ–æ—Ç–æ + –∫–Ω–æ–ø–∫–∏)
    try:
        sent_msg = await message.answer_photo(
            photo=MENU_PHOTO_ID,
            reply_markup=kb
        )
        last_menu_message[chat_id] = sent_msg.message_id
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –≤ —á–∞—Ç–µ {chat_id}: {e}")


@menu_router.callback_query(F.data.startswith("menu_stub|"))
async def on_menu_stub(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏, –≥–¥–µ callback_data –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å "menu_stub|..."
    –ï—Å–ª–∏ action == "booking", —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã –∏ —Ç.–¥.
    """
    parts = callback.data.split("|")
    if len(parts) != 2:
        return await callback.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!", show_alert=True)

    action = parts[1]

    if action == "booking":
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø
        row_buf = []
        rows = []
        i = 0
        for gk in groups_data.keys():
            row_buf.append(InlineKeyboardButton(text=gk, callback_data=f"bkgrp_{gk}"))
            i += 1
            if i % 3 == 0:
                rows.append(row_buf)
                row_buf = []
        if row_buf:
            rows.append(row_buf)

        kb = InlineKeyboardMarkup(inline_keyboard=rows)

        try:
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=GROUP_CHOICE_IMG,
                    caption=""
                ),
                reply_markup=kb
            )
        except TelegramBadRequest as e:
            logging.warning(f"Edit media failed: {e}")
            try:
                await callback.message.delete()
            except:
                pass
            await callback.message.answer_photo(
                photo=GROUP_CHOICE_IMG,
                caption="",
                reply_markup=kb
            )

        await state.set_state(BookUserStates.waiting_for_group)
        await callback.answer()
        return

    elif action == "girls":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: —Å–ø–∏—Å–æ–∫ Girls...", show_alert=True)
    elif action == "news":
        try:
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=MENU_PHOTO_ID,
                    caption="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:"
                ),
                reply_markup=None
            )
        except TelegramBadRequest as e:
            logging.warning(f"Edit media failed: {e}")
            try:
                await callback.message.delete()
            except:
                pass
            await callback.message.answer_photo(
                photo=MENU_PHOTO_ID,
                caption="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:"
            )
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏
        await cmd_show_news(callback.message)
        await callback.answer()
    elif action == "balance":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: –ø–æ–∫–∞–∑ –±–∞–ª–∞–Ω—Å–∞...", show_alert=True)
    elif action == "cancel_booking":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: –æ—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...", show_alert=True)
    else:
        await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é!", show_alert=True)