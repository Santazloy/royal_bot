# handlers/menu.py

import logging
from aiogram import Router, F, types
from aiogram.types import (
    Message,
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputMediaPhoto
)
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramBadRequest

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ booking.py —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ:
from handlers.booking import groups_data, BookUserStates, BOOKING_PHOTO_ID
from handlers.news import cmd_show_news
menu_router = Router()

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å: {chat_id: message_id}, —á—Ç–æ–±—ã —É–¥–∞–ª—è—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
last_menu_message = {}

# file_id –∫–∞—Ä—Ç–∏–Ω–∫–∏ (—Ñ–æ—Ç–æ) –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é:
MENU_PHOTO_ID = "AgACAgUAAyEFAASVOrsCAAPIaCLmhi308A24UzDBSEx2jLW7VrkAAofEMRsGphlVmJQawyQ2FOIBAAMCAAN5AAM2BA"


@menu_router.message(Command("menu"))
async def cmd_menu(message: Message):
    """
    –ü—Ä–∏ –≤—ã–∑–æ–≤–µ /menu:
    1) –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é (–µ—Å–ª–∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ last_menu_message)
    2) –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –∏ –¥–≤—É—Ö–∫–æ–ª–æ–Ω–æ—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    3) –°–æ—Ö—Ä–∞–Ω—è–µ–º message_id
    """
    chat_id = message.chat.id

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é (–µ—Å–ª–∏ –µ—Å—Ç—å)
    old_msg_id = last_menu_message.get(chat_id)
    if old_msg_id:
        try:
            await message.bot.delete_message(chat_id=chat_id, message_id=old_msg_id)
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é –≤ —á–∞—Ç–µ {chat_id}: {e}")

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: 2 –∫–æ–ª–æ–Ω–∫–∏ √ó 3 —Å—Ç—Ä–æ–∫–∏ (6 –∫–Ω–æ–ø–æ–∫)
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚è∞ Booking / È¢ÑÁ∫¶", callback_data="menu_stub|booking"),
            InlineKeyboardButton(text="üíÉ Girls / Â•≥Â≠©",  callback_data="menu_stub|girls"),
        ],
        [
            InlineKeyboardButton(text="üìã All Booking / ÊâÄÊúâÈ¢ÑÁ∫¶", callback_data="menu_stub|all_booking"),
            InlineKeyboardButton(text="üßÆ Balance / ‰ΩôÈ¢ù",        callback_data="menu_stub|balance"),
        ],
        [
            InlineKeyboardButton(text="üì∞ News / Êñ∞Èóª", callback_data="menu_stub|news"),
            InlineKeyboardButton(text="‚ùå Cancel Booking / ÂèñÊ∂àÈ¢ÑÁ∫¶", callback_data="menu_stub|cancel_booking"),
        ]
    ])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
    try:
        sent_msg = await message.answer_photo(
            photo=MENU_PHOTO_ID,
            caption="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=kb
        )
        # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        last_menu_message[chat_id] = sent_msg.message_id
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é –≤ —á–∞—Ç–µ {chat_id}: {e}")


@menu_router.callback_query(F.data.startswith("menu_stub|"))
async def on_menu_stub(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –ª—é–±—ã–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ /menu (–ø—Ä–µ—Ñ–∏–∫—Å menu_stub|...).
    –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "booking", —Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ,
    –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã (–∫–∞–∫ –≤ /book),
    –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ BookUserStates.waiting_for_group.
    –û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∏.
    """
    parts = callback.data.split("|")
    if len(parts) != 2:
        return await callback.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!", show_alert=True)

    action = parts[1]

    # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ "booking" ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏–∫—É
    if action == "booking":
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–∫—É—é –∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø, –∫–∞–∫ –≤ /book
        row_buf = []
        rows = []
        i = 0
        for gk in groups_data.keys():
            row_buf.append(InlineKeyboardButton(text=gk, callback_data=f"bkgrp_{gk}"))
            i += 1
            if i % 3 == 0:
                rows.append(row_buf)
                row_buf = []
        if row_buf:
            rows.append(row_buf)

        kb = InlineKeyboardMarkup(inline_keyboard=rows)

        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–º–µ–Ω—è–µ–º —Ñ–æ—Ç–æ + –ø–æ–¥–ø–∏—Å—å + –∫–Ω–æ–ø–∫–∏)
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=BOOKING_PHOTO_ID,
                    caption="–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:"
                ),
                reply_markup=kb
            )
        except TelegramBadRequest as e:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –±—ã–ª–æ —Ç–µ–∫—Å—Ç–æ–º, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ media –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
            logging.warning(f"Edit media failed: {e}. –£–¥–∞–ª—è–µ–º –∏ —à–ª—ë–º –Ω–æ–≤–æ–µ.")
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            try:
                await callback.message.delete()
            except:
                pass
            new_msg = await callback.message.answer_photo(
                photo=BOOKING_PHOTO_ID,
                caption="–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:",
                reply_markup=kb
            )
            # –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å new_msg.message_id –≤–º–µ—Å—Ç–æ —Å—Ç–∞—Ä–æ–≥–æ,
            # –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–∞–ª–µ–µ —É–¥–∞–ª—è—Ç—å –∏–º–µ–Ω–Ω–æ –µ–≥–æ.

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º FSM: –∂–¥—ë–º –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã
        await state.set_state(BookUserStates.waiting_for_group)

        # –£–≤–µ–¥–æ–º–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –æ–∫
        await callback.answer()
        return

    # –ò–Ω–∞—á–µ ‚Äî –∑–∞–≥–ª—É—à–∫–∏
    if action == "girls":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: —Å–ø–∏—Å–æ–∫ Girls...", show_alert=True)
    elif action == "news":
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ,
            # –º–µ–Ω—è–µ–º —Ñ–æ—Ç–æ –∏ –ø–æ–¥–ø–∏—Å—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏").
            await callback.message.edit_media(
                media=InputMediaPhoto(
                    media=MENU_PHOTO_ID,  # –ú–æ–∂–Ω–æ NEWS_PHOTO_ID, –µ—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
                    caption="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:"
                ),
                reply_markup=None  # –ú–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            )
        except TelegramBadRequest as e:
            # –ï—Å–ª–∏ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –Ω–µ —Ñ–æ—Ç–æ/–º–µ–¥–∏–∞, edit_media –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç
            logging.warning(f"Edit media failed: {e}. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –∏ —à–ª—ë–º –Ω–æ–≤–æ–µ.")
            try:
                await callback.message.delete()
            except:
                pass
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            await callback.message.answer_photo(
                photo=MENU_PHOTO_ID,
                caption="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏:"
            )

        # –¢–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ–º –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É /news (–∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é show_news)
        # –í–º–µ—Å—Ç–æ callback.message –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å "—Ñ–∏–∫—Ç–∏–≤–Ω–æ–µ" Message,
        # –Ω–æ –ø—Ä–æ—â–µ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–≤–∞—Ç—å cmd_show_news –∏ –ø–µ—Ä–µ–¥–∞—Ç—å "callback.message"
        await cmd_show_news(callback.message)

        # –ó–∞–∫—Ä—ã–≤–∞–µ–º alert
        await callback.answer()
    elif action == "balance":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: –ø–æ–∫–∞–∑ –±–∞–ª–∞–Ω—Å–∞...", show_alert=True)
    elif action == "all_booking":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...", show_alert=True)
    elif action == "cancel_booking":
        await callback.answer("–ó–∞–≥–ª—É—à–∫–∞: –æ—Ç–º–µ–Ω–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...", show_alert=True)
    else:
        await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –º–µ–Ω—é!", show_alert=True)